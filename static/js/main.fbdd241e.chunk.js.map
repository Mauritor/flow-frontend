{"version":3,"sources":["components/Card_Forecast.js","components/Card_Weather.js","components/Card_location.js","components/Nav.js","App.js","index.js"],"names":["CardForecast","props","useState","forecast","setForecast","getForecast","a","splice","length","moment","locale","city","toLowerCase","url","fetch","headers","res","json","data","list","console","log","useEffect","map","item","dia","index","className","dt_txt","weather","description","main","temp","toFixed","humidity","wind","speed","CardWeather","setWeather","getWeather","strcity","Date","now","format","id","CardLocation","ipclient","setIpclient","location","setLocation","setCity","getDataLocation","publicIp","v4","ip","method","body","JSON","stringify","regionName","country","query","Nav","datoCity","setDatoCity","htmlFor","onChange","event","target","value","name","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbdd241e.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport '../../node_modules/moment/min/locales';\r\n\r\nconst CardForecast = (props) => {\r\n    const init = [];\r\n    const [forecast, setForecast] = useState(init);\r\n\r\n    const getForecast = async () => {\r\n        forecast.splice(0, forecast.length);\r\n        moment.locale('es');\r\n        const city = await props.city.toLowerCase();\r\n        const url = `https://api-test-weather.herokuapp.com/forecast/${city}`;\r\n        try {\r\n            const res = await fetch(url, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                },\r\n            })\r\n            const data = await res.json();\r\n            const list = await data.list;\r\n            setForecast([...forecast, list]);\r\n        } catch (error) {\r\n            console.log('OUCH! Error: ', error);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getForecast();\r\n    }, [props.city]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <Fragment>\r\n            {forecast.map((item) => (\r\n                item.map((dia, index) => (\r\n                    <div className=\"card bg-primary mt-4\" key={index}>\r\n                        <div className=\"card-body text-light\" >\r\n                            <h6>Forecast</h6>\r\n                            <h5 className=\"text-info\">{props.city} </h5>\r\n                            <h5 className=\"text-info\">{dia.dt_txt}</h5>\r\n                            <h6 className=\"text-warning\">{dia.weather[0].description}</h6>\r\n                            <h6>Temp: {dia.main.temp.toFixed(1)} °C</h6>\r\n                            <h6>Humedad: {dia.main.humidity} %</h6>\r\n                            <h6>Viento: {dia.wind.speed} km/h </h6>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            ))}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CardForecast;","import React, { Fragment, useState, useEffect} from 'react';\r\nimport moment from 'moment';\r\nimport '../../node_modules/moment/min/locales';\r\nimport CardForecast from './Card_Forecast';\r\n\r\nconst CardWeather = (props) => {\r\n    moment.locale('es');\r\n    const [weather, setWeather] = useState([]);\r\n    \r\n    const getWeather = async () => {\r\n        weather.splice(0, weather.length);\r\n        const strcity = await props.city.toLowerCase();\r\n        //const city = await strcity.replace(' ', '%20');\r\n        const url = `https://api-test-weather.herokuapp.com/current/${strcity}`;\r\n        try {\r\n            const res = await fetch(url, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                },\r\n            })\r\n            const data = await res.json()\r\n            setWeather([...weather, data]);\r\n        } catch (error) {\r\n            console.log('OUCH! Error: ', error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getWeather();\r\n    }, [props.city]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"card border-0\">\r\n                {weather.map(item => (\r\n                    <div className=\"card-body text-secondary\" key={item.id}>\r\n                        <h6>Weather</h6>\r\n                        <h5 className=\"text-info\">{props.city} </h5>\r\n                        <h5 className=\"text-info\">{moment(Date.now()).format('ddd DD MMM YYYY')}</h5>\r\n                        <h6 className=\"text-warning\">{item.weather[0].description}</h6>\r\n                        <h6>Temp: {item.main.temp.toFixed(1)} °C</h6>\r\n                        <h6>Humedad: {item.main.humidity} %</h6>\r\n                        <h6>Viento: {item.wind.speed} km/h </h6>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <CardForecast city={props.city} />\r\n        </Fragment>\r\n    )\r\n}\r\nexport default CardWeather;","import React, { Fragment, useState, useEffect } from 'react';\r\nimport CardWeather from './Card_Weather';\r\nimport publicIp from 'public-ip';\r\n\r\nconst CardLocation = (props) => {\r\n    //OBTENGO IP CLIENTE\r\n    //OBTENGO DATA LOCATION DESDE MY API-WEATHER\r\n    const [ipclient, setIpclient] = useState('');\r\n    const [location, setLocation] = useState([]);\r\n    const [city, setCity] = useState('');\r\n\r\n    const getDataLocation = async () => {\r\n        const ip = await publicIp.v4();\r\n        setIpclient(ip);\r\n\r\n        const res = await fetch('https://api-test-weather.herokuapp.com/location', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ ip: ipclient })\r\n\r\n        })\r\n        const data = await res.json();\r\n        setLocation([...location, data]);\r\n        setCity(data.city);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getDataLocation();\r\n    }, [ipclient]) // eslint-disable-line react-hooks/exhaustive-deps\r\n    return (\r\n        <Fragment>\r\n            <div className=\"card\">\r\n                {location.map((item, index) => (\r\n                    <div className=\"card-body text-secondary\" key={index}>\r\n                        <h6>Location</h6>\r\n                        <h5 className=\"text-info\">{item.city}</h5>\r\n                        <h6>{item.regionName}</h6>\r\n                        <h6>{item.country}</h6>\r\n                        <p>{item.query}</p>\r\n                    </div>\r\n                ))}\r\n\r\n            </div>\r\n            <CardWeather city={city} />\r\n        </Fragment>\r\n\r\n    )\r\n}\r\nexport default CardLocation;","import { Fragment, useState } from \"react\";\r\nimport CardWeather from './Card_Weather';\r\nimport CardLocation from './Card_location';\r\n\r\nconst Nav = () => {\r\n    const [datoCity, setDatoCity] = useState('');\r\n\r\n    const handleInputChange = (event) => {\r\n        //console.log(event.target.value)\r\n        setDatoCity(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <nav className=\"navbar  navbar-dark bg-dark\">\r\n                <div className=\"navbar-collapse\" >\r\n                    <div className=\"row\">\r\n                        <div className=\"col col-sm-12 col-md-6 offset-md-3 \">\r\n                            <form >\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleSelect1\">Patagonia select</label>\r\n                                    <select className=\"form-control\" onChange={handleInputChange} name=\"patagoniaCity\">\r\n                                        \r\n                                        <option>Bariloche</option>\r\n                                        <option>Calafate</option>\r\n                                        <option>Esquel</option>\r\n                                        <option>Trelew</option>\r\n                                        <option>Ushuaia</option>\r\n                                    </select>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col col-sm-6 col-md-4 offset-md-2 text-center mt-5\">\r\n                        <CardLocation city={datoCity} />\r\n                    </div>\r\n                    <div className=\"col col-sm-6 col-md-4  text-center mt-5\">\r\n                        <CardWeather city={datoCity} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\nimport Nav from './components/Nav';\n\n\nfunction App() {\n  return (\n      <Nav />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}